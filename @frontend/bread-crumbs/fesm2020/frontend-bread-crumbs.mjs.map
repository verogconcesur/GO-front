{"version":3,"file":"frontend-bread-crumbs.mjs","sources":["../../../projects/bread-crumbs/src/lib/services/bread-crumbs.service.ts","../../../projects/bread-crumbs/src/lib/component/bread-crumbs.component.ts","../../../projects/bread-crumbs/src/lib/component/bread-crumbs.component.html","../../../projects/bread-crumbs/src/lib/bread-crumbs.module.ts","../../../projects/bread-crumbs/src/public-api.ts","../../../projects/bread-crumbs/src/frontend-bread-crumbs.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Data,\r\n  NavigationEnd,\r\n  Router,\r\n} from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Breadcrumb } from '../models/bread-crumbs.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadCrumbsService {\r\n  // Observable exposing the breadcrumb hierarchy\r\n  readonly breadcrumbs$: Observable<Breadcrumb[]>;\r\n  // Subject emitting the breadcrumb hierarchy\r\n  private readonly breadcrumbsSubject$ = new BehaviorSubject<Breadcrumb[]>([]);\r\n\r\n  constructor(private router: Router, private translate: TranslateService) {\r\n    this.breadcrumbs$ = this.breadcrumbsSubject$.asObservable();\r\n    this.router.events\r\n      .pipe(\r\n        // Filter the NavigationEnd events as the breadcrumb is updated only when the route reaches its end\r\n        filter((event) => event instanceof NavigationEnd)\r\n      )\r\n      .subscribe((event) => {\r\n        // Construct the breadcrumb hierarchy\r\n        const root = this.router.routerState.snapshot.root;\r\n        const breadcrumbs: Breadcrumb[] = [];\r\n        this.addBreadcrumb(root, [], breadcrumbs);\r\n        // Emit the new hierarchy\r\n        this.breadcrumbsSubject$.next(breadcrumbs);\r\n      });\r\n  }\r\n\r\n  private addBreadcrumb(\r\n    route: ActivatedRouteSnapshot | null,\r\n    parentUrl: string[],\r\n    breadcrumbs: Breadcrumb[]\r\n  ) {\r\n    if (route) {\r\n      // Construct the route URL\r\n      const routeUrl = parentUrl.concat(route.url.map((url) => url.path));\r\n      let routeBreadcrumbs = [];\r\n      if (route.data['breadcrumb'] && route.data['breadcrumb'].id) {\r\n        routeBreadcrumbs = [route.data['breadcrumb']];\r\n      } else if (\r\n        route.data['breadcrumb'] &&\r\n        Array.isArray(route.data['breadcrumb'])\r\n      ) {\r\n        routeBreadcrumbs = route.data['breadcrumb'];\r\n      }\r\n\r\n      routeBreadcrumbs.forEach(\r\n        (routeBreadcrumb: {\r\n          id: string;\r\n          url: string;\r\n          label?: (data: Data) => string | string;\r\n          iconName?: string;\r\n          iconFontSet?: string;\r\n          iconPosition?: 'start' | 'end';\r\n          numberOfPathsToRemoveFromTheUrl?: number;\r\n        }) => {\r\n          // Add an element for the current route part\r\n          if (\r\n            routeBreadcrumb &&\r\n            routeBreadcrumb.id &&\r\n            !breadcrumbs.find(\r\n              (breadcrumb: Breadcrumb) => breadcrumb.id === routeBreadcrumb.id\r\n            )\r\n          ) {\r\n            let url = routeUrl.join('/');\r\n            if (routeBreadcrumb.numberOfPathsToRemoveFromTheUrl) {\r\n              url = routeUrl\r\n                .slice(\r\n                  0,\r\n                  routeUrl.length -\r\n                    routeBreadcrumb.numberOfPathsToRemoveFromTheUrl\r\n                )\r\n                .join('/');\r\n            }\r\n            const breadcrumb: Breadcrumb = {\r\n              id: routeBreadcrumb.id,\r\n              url: '/' + url,\r\n            };\r\n            if (routeBreadcrumb.label) {\r\n              breadcrumb.label = this.getLabel(route.data, routeBreadcrumb);\r\n            }\r\n            if (routeBreadcrumb.iconName) {\r\n              breadcrumb.iconName = routeBreadcrumb.iconName;\r\n              breadcrumb.iconFontSet = routeBreadcrumb.iconFontSet\r\n                ? routeBreadcrumb.iconFontSet\r\n                : '';\r\n              breadcrumb.iconPosition = routeBreadcrumb.iconPosition\r\n                ? routeBreadcrumb.iconPosition\r\n                : 'start';\r\n            }\r\n            breadcrumbs.push(breadcrumb);\r\n          }\r\n        }\r\n      );\r\n\r\n      // Add another element for the next route part\r\n      this.addBreadcrumb(route.firstChild, routeUrl, breadcrumbs);\r\n    }\r\n  }\r\n\r\n  private getLabel(\r\n    data: Data,\r\n    routeBreadcrumb: {\r\n      id: string;\r\n      url: string;\r\n      label?: (data: Data) => string | string;\r\n      iconName?: string;\r\n      iconFontSet?: string;\r\n      iconPosition?: 'start' | 'end';\r\n      numberOfPathsToRemoveFromTheUrl?: number;\r\n    }\r\n  ) {\r\n    // The breadcrumb can be defined as a static string or as a function to construct the breadcrumb element out of the route data\r\n    data = { ...data, breadcrumb: routeBreadcrumb };\r\n    return typeof data['breadcrumb'].label === 'function'\r\n      ? data['breadcrumb'].label(data)\r\n      : data['breadcrumb'].label\r\n      ? this.translate.instant(data['breadcrumb'].label)\r\n      : '';\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BreadcrumbBackButtonConfigI } from '../interfaces/bread-crumbs-back-button-config.interface';\r\nimport { Breadcrumb } from '../models/bread-crumbs.model';\r\nimport { BreadCrumbsService } from '../services/bread-crumbs.service';\r\n\r\n@Component({\r\n  selector: 'jenga-bread-crumbs',\r\n  templateUrl: './bread-crumbs.component.html',\r\n  styleUrls: ['./bread-crumbs.component.scss'],\r\n})\r\nexport class BreadCrumbsComponent {\r\n  @Input() customClasses: string[] = [];\r\n  @Input() backButtonConfig!: BreadcrumbBackButtonConfigI;\r\n\r\n  breadcrumbs$: Observable<Breadcrumb[]>;\r\n  private backUrl!: string;\r\n\r\n  constructor(\r\n    private readonly breadcrumbService: BreadCrumbsService,\r\n    private router: Router\r\n  ) {\r\n    this.breadcrumbs$ = this.breadcrumbService.breadcrumbs$.pipe(\r\n      tap((data: Breadcrumb[]) => {\r\n        if (data.length >= 2) {\r\n          this.backUrl = data[data.length - 2].url;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  public goBack(): void {\r\n    this.router.navigateByUrl(this.backUrl);\r\n  }\r\n\r\n  public showBackButton = (): boolean =>\r\n    this.backButtonConfig?.hidden ? false : true;\r\n  public getBackButtonColor = (): string =>\r\n    this.backButtonConfig?.color ? this.backButtonConfig?.color : 'primary';\r\n\r\n  public getBackButtonClass = (): string =>\r\n    this.backButtonConfig?.class ? this.backButtonConfig?.class : '';\r\n\r\n  public getBackButtonIconName = (): string =>\r\n    this.backButtonConfig?.iconName\r\n      ? this.backButtonConfig?.iconName\r\n      : 'keyboard_arrow_left';\r\n\r\n  public getBackButtonIconFontset = (): string =>\r\n    this.backButtonConfig?.iconFontSet\r\n      ? this.backButtonConfig?.iconFontSet\r\n      : '';\r\n\r\n  public getBreadcrumbFontSet = (breadcrumb: Breadcrumb): string =>\r\n    breadcrumb?.iconFontSet ? breadcrumb.iconFontSet : '';\r\n}\r\n","<div\r\n  class=\"breadcrumbs breadcrumbs-default-style\"\r\n  [ngClass]=\"customClasses\"\r\n  *ngIf=\"(breadcrumbs$ | async)?.length\"\r\n>\r\n  <button\r\n    mat-flat-button\r\n    *ngIf=\"showBackButton()\"\r\n    [color]=\"getBackButtonColor()\"\r\n    [class]=\"\r\n      'breadcrumbs__back-button mat-square-icon square-28 ' +\r\n      getBackButtonClass()\r\n    \"\r\n    (click)=\"goBack()\"\r\n  >\r\n    <mat-icon [fontSet]=\"getBackButtonIconFontset()\">{{\r\n      getBackButtonIconName()\r\n    }}</mat-icon>\r\n  </button>\r\n  <ul>\r\n    <li\r\n      *ngFor=\"let breadcrumb of breadcrumbs$ | async\"\r\n      [routerLink]=\"breadcrumb.url\"\r\n    >\r\n      <mat-icon\r\n        *ngIf=\"breadcrumb.iconName && breadcrumb.iconPosition === 'start'\"\r\n        [fontSet]=\"getBreadcrumbFontSet(breadcrumb)\"\r\n        >{{ breadcrumb.iconName }}</mat-icon\r\n      >\r\n      <span *ngIf=\"breadcrumb.label\">\r\n        {{ breadcrumb.label }}\r\n      </span>\r\n      <mat-icon\r\n        *ngIf=\"breadcrumb.iconName && breadcrumb.iconPosition === 'end'\"\r\n        [fontSet]=\"getBreadcrumbFontSet(breadcrumb)\"\r\n        >{{ breadcrumb.iconName }}</mat-icon\r\n      >\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// import { BreadCrumbsService } from './services/bread-crumbs.service';\r\nimport { BreadCrumbsComponent } from './component/bread-crumbs.component';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { Subject } from 'rxjs';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nexport class Loader implements TranslateLoader {\r\n  private translations = new Subject();\r\n  $translations = this.translations.asObservable();\r\n  getTranslation(lang: string) {\r\n    return this.$translations;\r\n  }\r\n}\r\n\r\nexport function LoaderFactory() {\r\n  return new Loader();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [BreadCrumbsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule.forChild({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: LoaderFactory,\r\n      },\r\n    }),\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  exports: [TranslateModule, BreadCrumbsComponent],\r\n})\r\nexport class BreadCrumbsModule {}\r\n","/*\r\n * Public API Surface of bread-crumbs\r\n */\r\n\r\nexport { BreadCrumbsService } from './lib/services/bread-crumbs.service';\r\nexport { Breadcrumb } from './lib/models/bread-crumbs.model';\r\nexport { BreadcrumbBackButtonConfigI } from './lib/interfaces/bread-crumbs-back-button-config.interface';\r\nexport { BreadCrumbsComponent } from './lib/component/bread-crumbs.component';\r\nexport { BreadCrumbsModule } from './lib/bread-crumbs.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i1.BreadCrumbsService"],"mappings":"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"}